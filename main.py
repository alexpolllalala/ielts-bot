import logging
import datetime
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# =============== CONFIG ===============
TOKEN = os.getenv("BOT_TOKEN")  # üîë –¢–≤—ñ–π Telegram Bot Token (–≤—Å—Ç–∞–≤–∏—Ç–∏ —É Replit Secrets)
CHAT_ID = os.getenv("CHAT_ID")  # üîë –¢–≤—ñ–π chat_id (–¥–ª—è –∞–≤—Ç–æ-—Ä–æ–∑—Å–∏–ª–∫–∏)
SEND_HOUR = 19  # –≥–æ–¥–∏–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
# =====================================

# –£–≤—ñ–º–∫–Ω–µ–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è (–¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏)
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# –°–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å –Ω–∞ 60 –¥–Ω—ñ–≤
tasks = {
    1: "üéØ Day 1:\n–ù–∞–ø–∏—à–∏ 5 —Ä–µ—á–µ–Ω—å –ø—Ä–æ —Å–µ–±–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é.",
    2: "üéØ Day 2:\n–ü—Ä–æ—Å–ª—É—Ö–∞–π –∫–æ—Ä–æ—Ç–∫–µ –≤—ñ–¥–µ–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é —ñ –∑–∞–Ω–æ—Ç—É–π 3 –Ω–æ–≤–∏—Ö —Å–ª–æ–≤–∞.",
    3: "üéØ Day 3:\n–ó—Ä–æ–±–∏ –ø–∏—Å—å–º–æ–≤–∏–π –æ–ø–∏—Å —Å–≤–æ—î—ó —Ä–æ–±–æ—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é (5-6 —Ä–µ—á–µ–Ω—å).",
    # ...
    60: "üéØ Day 60:\n–ü–æ–≤–Ω–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: Speaking (2 —Ö–≤–∏–ª–∏–Ω–∏), Writing (150+ —Å–ª—ñ–≤), Listening (10 —Ö–≤–∏–ª–∏–Ω)."
}

# =============== –ö–æ–º–∞–Ω–¥–∏ ===============
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç üëã –Ø —Ç–≤—ñ–π IELTS-–±–∞—Ç–ª–µ—Ä.\n"
        "–ö–æ–º–∞–Ω–¥–∏:\n"
        "/dayX (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, /day5) ‚Äì –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è\n"
        "/today ‚Äì —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è\n"
        "/help ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìò –ö–æ–º–∞–Ω–¥–∏:\n"
        "/dayX ‚Äì –∑–∞–≤–¥–∞–Ω–Ω—è –ø–µ–≤–Ω–æ–≥–æ –¥–Ω—è\n"
        "/today ‚Äì –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ\n"
        "/help ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )

async def day(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        day_number = int(update.message.text.replace("/day", ""))
        task = tasks.get(day_number, "‚ùå –ù–µ–º–∞—î –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è —Ü—å–æ–≥–æ –¥–Ω—è.")
        await update.message.reply_text(task)
    except ValueError:
        await update.message.reply_text("‚ùå –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ñ–æ—Ä–º–∞—Ç: /day5")

async def today(update: Update, context: ContextTypes.DEFAULT_TYPE):
    start_date = datetime.date(2025, 9, 9)  # üëâ —Ç—É—Ç –ø–æ—Å—Ç–∞–≤ –¥–∞—Ç—É —Å—Ç–∞—Ä—Ç—É
    today_date = datetime.date.today()
    diff = (today_date - start_date).days + 1
    task = tasks.get(diff, f"‚úÖ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–µ! {diff} –¥–Ω—ñ–≤ –º–∏–Ω—É–ª–æ.")
    await update.message.reply_text(task)

# =============== –ê–≤—Ç–æ-—Ä–æ–∑—Å–∏–ª–∫–∞ ===============
async def send_daily_task(application: Application):
    start_date = datetime.date(2025, 9, 9)  # üëâ —Ç–∞ –∂ –¥–∞—Ç–∞
    today_date = datetime.date.today()
    diff = (today_date - start_date).days + 1
    task = tasks.get(diff, "üéâ –í—Å—ñ 60 –¥–Ω—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    if CHAT_ID:
        await application.bot.send_message(chat_id=CHAT_ID, text=task)

# =============== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===============
def main():
    app = Application.builder().token(TOKEN).build()

    # –ö–æ–º–∞–Ω–¥–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(CommandHandler("today", today))
    app.add_handler(CommandHandler("day", day))

    # –ê–≤—Ç–æ-—Ä–æ–∑—Å–∏–ª–∫–∞
    scheduler = AsyncIOScheduler(timezone="Canada/Mountain")  # üá®üá¶ Alberta time
    scheduler.add_job(send_daily_task, "cron", hour=SEND_HOUR, args=[app])
    scheduler.start()

    logging.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π")
    app.run_polling()

if __name__ == "__main__":
    main()
